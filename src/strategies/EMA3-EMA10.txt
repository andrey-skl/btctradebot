//EMA3-EMA10 strategy from Huston007
var strategyProcessor = function(api, trader){
	var pauseLength = 5;
	var iterator = pauseLength;
	var isBought = false;
	var summ = 0;
	var lastBuyPrice = 0;
	var lastPrice=null;
	var stopLoss = 10;
	var takeProfit = 40;
	var emaMinGraph = trader.addChart('EMA3');
	var emaMaxGraph = trader.addChart('EMA10');
	
	trader.timeFrame = 60;
	
	this.sell = function(){
        isBought = false;
        iterator=pauseLength;
        trader.sellSignal(lastPrice).then(function(){
            
        });
	}
	
	this.buy = function(){
        isBought = true;
        iterator=pauseLength;
        lastBuyPrice = lastPrice;
        trader.buySignal(lastPrice).then(function(){
            
        });
	}
	
	this.handlePeriod= function(tradeData){
		if (iterator>0)
			iterator--;
		lastPrice = tradeData[tradeData.length-1].close;
		var lastDate = tradeData[tradeData.length-1];
		var closedPrices = [];
		for (var i in tradeData){
			closedPrices.push(tradeData[i].close);
		}
		var minEmaPeriod = 3;
		var maxEmaPeriod = 10;
		var minEmaOffset =0;//maxEmaPeriod-minEmaPeriod;
		var lastEmaLength = 4;
		var ema4 = TA.EMAverage(closedPrices, minEmaPeriod);
		var ema8 = TA.EMAverage(closedPrices, maxEmaPeriod);
		/*var ROC = TA.Roc(closedPrices, 10);*/

		var lastEmas = [];
		/*filling last emas*/	
		for (var i=0; i<lastEmaLength; i++ ){
			lastEmas.push({
				ema4: ema4[ema4.length -minEmaPeriod-minEmaOffset -lastEmaLength+ i+1 ],
				ema8: ema8[ema8.length - maxEmaPeriod -lastEmaLength+ i+1 ]
			});
		}	
		emaMinGraph.push([trader.lastDate.getTime(),lastEmas[lastEmas.length-1].ema4]);
		emaMaxGraph.push([trader.lastDate.getTime(),lastEmas[lastEmas.length-1].ema8]);
		/*searching upper cross*/
		for (var i = 1; i<lastEmas.length; i++){
			var prevEmas = lastEmas[i-1];
			var lastEma = lastEmas[i];
			if (!prevEmas.ema4 || !prevEmas.ema8 || !lastEma.ema4 || !lastEma.ema8)
				continue;
			if (prevEmas.ema4 < prevEmas.ema8 && lastEma.ema4 > lastEma.ema8){
				if (iterator==0 && !isBought) {
					this.buy();
				}
			} else if (prevEmas.ema4 > prevEmas.ema8 && lastEma.ema4 < lastEma.ema8){
				if (iterator==0 && isBought) {
					this.sell();
				}
			}
		}
		
		if (isBought && lastPrice<lastBuyPrice-stopLoss){
			log('stopLoss shouted!!!',trader.lastDate);
			this.sell();
		}
		if (isBought && lastPrice>lastBuyPrice+takeProfit){
			log('takeProfit shouted!!!',trader.lastDate);
			this.sell();
		}
	};	
};